<?xml version="1.0" encoding="UTF-8"?>
<core:FragmentDefinition
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:f="sap.ui.layout.form">
    
    <Dialog
        title="{i18n>dialog.createEmbeddingModel.title}"
        class="sapUiMediumMargin"
        contentWidth="75rem"
        contentHeight="85vh"
        resizable="true"
        draggable="true"
        stretch="{device>/system/phone}"
        afterOpen=".onCreateModelDialogAfterOpen"
        afterClose=".onCreateModelDialogAfterClose">
        
        <content>
            <Page showHeader="false">
                <content>
                    
                    <IconTabBar id="createModelTabBar" class="sapUiNoContentPadding">
                        
                        <!-- Basic Information Tab -->
                        <items>
                            <IconTabFilter text="{i18n>tab.general}" key="basic" icon="sap-icon://detail-view">
                                <content>
                                    <f:SimpleForm
                                        editable="true"
                                        layout="ResponsiveGridLayout"
                                        class="sapUiMediumMargin">
                                        
                                        <f:content>
                                            
                                            <!-- Model Name -->
                                            <Label text="{i18n>field.modelName}" required="true"/>
                                            <Input id="modelNameInput" value="{create>/modelName}" placeholder="{i18n>placeholder.modelName}" required="true" valueState="{create>/modelNameState}" valueStateText="{create>/modelNameStateText}" liveChange=".onModelNameChange"/>
                                            
                                            <!-- Description -->
                                            <Label text="{i18n>field.description}"/>
                                            <TextArea id="descriptionInput" value="{create>/description}" rows="3" placeholder="{i18n>placeholder.description}" maxLength="500" showExceededText="true" liveChange=".onDescriptionChange"/>
                                            
                                            <!-- Model Type -->
                                            <Label text="{i18n>field.modelType}" required="true"/>
                                            <ComboBox
                                                id="modelTypeCombo"
                                                selectedKey="{create>/modelType}"
                                                placeholder="{i18n>placeholder.modelType}"
                                                required="true"
                                                valueState="{create>/modelTypeState}"
                                                valueStateText="{create>/modelTypeStateText}"
                                                selectionChange=".onModelTypeChange">
                                                <core:Item key="bert" text="{i18n>model.bert}"/>
                                                <core:Item key="roberta" text="{i18n>model.roberta}"/>
                                                <core:Item key="distilbert" text="{i18n>model.distilbert}"/>
                                                <core:Item key="albert" text="{i18n>model.albert}"/>
                                                <core:Item key="sentence_bert" text="{i18n>model.sentence_bert}"/>
                                                <core:Item key="clip" text="{i18n>model.clip}"/>
                                                <core:Item key="gpt" text="{i18n>model.gpt}"/>
                                                <core:Item key="word2vec" text="{i18n>model.word2vec}"/>
                                                <core:Item key="glove" text="{i18n>model.glove}"/>
                                                <core:Item key="fasttext" text="{i18n>model.fasttext}"/>
                                                <core:Item key="custom" text="{i18n>model.custom}"/>
                                            </ComboBox>
                                            
                                            <!-- Base Model -->
                                            <Label text="{i18n>field.baseModel}" required="true"/>
                                            <ComboBox
                                                id="baseModelCombo"
                                                selectedKey="{create>/baseModel}"
                                                placeholder="{i18n>placeholder.baseModel}"
                                                required="true"
                                                valueState="{create>/baseModelState}"
                                                valueStateText="{create>/baseModelStateText}"
                                                selectionChange=".onBaseModelChange">
                                                <core:Item key="bert_base" text="{i18n>base.bert_base}"/>
                                                <core:Item key="bert_large" text="{i18n>base.bert_large}"/>
                                                <core:Item key="roberta_base" text="{i18n>base.roberta_base}"/>
                                                <core:Item key="roberta_large" text="{i18n>base.roberta_large}"/>
                                                <core:Item key="mpnet_base" text="{i18n>base.mpnet_base}"/>
                                                <core:Item key="minilm" text="{i18n>base.minilm}"/>
                                                <core:Item key="all_minilm" text="{i18n>base.all_minilm}"/>
                                                <core:Item key="all_mpnet" text="{i18n>base.all_mpnet}"/>
                                                <core:Item key="multilingual" text="{i18n>base.multilingual}"/>
                                            </ComboBox>
                                            
                                            <!-- Embedding Dimension -->
                                            <Label text="{i18n>field.embeddingDimension}"/>
                                            <StepInput id="embeddingDimensionInput" value="{create>/embeddingDimension}" min="64" max="4096" step="64" change=".onEmbeddingDimensionChange"/>
                                            
                                        </f:content>
                                    </f:SimpleForm>
                                </content>
                            </IconTabFilter>
                            
                            <!-- Model Configuration Tab -->
                            <IconTabFilter text="{i18n>tab.modelConfig}" key="config" icon="sap-icon://settings">
                                <content>
                                    <f:SimpleForm
                                        editable="true"
                                        layout="ResponsiveGridLayout"
                                        class="sapUiMediumMargin">
                                        
                                        <f:content>
                                            
                                            <!-- Architecture -->
                                            <Label text="{i18n>field.architecture}"/>
                                            <Input id="architectureInput" value="{create>/architecture}" placeholder="{i18n>placeholder.architecture}" liveChange=".onArchitectureChange"/>
                                            
                                            <!-- Layer Count -->
                                            <Label text="{i18n>field.layerCount}"/>
                                            <StepInput id="layerCountInput" value="{create>/layerCount}" min="1" max="48" step="1" change=".onLayerCountChange"/>
                                            
                                            <!-- Hidden Size -->
                                            <Label text="{i18n>field.hiddenSize}"/>
                                            <StepInput id="hiddenSizeInput" value="{create>/hiddenSize}" min="128" max="4096" step="128" change=".onHiddenSizeChange"/>
                                            
                                            <!-- Attention Heads -->
                                            <Label text="{i18n>field.attentionHeads}"/>
                                            <StepInput id="attentionHeadsInput" value="{create>/attentionHeads}" min="1" max="64" step="1" change=".onAttentionHeadsChange"/>
                                            
                                            <!-- Vocabulary Size -->
                                            <Label text="{i18n>field.vocabularySize}"/>
                                            <Input id="vocabularySizeInput" value="{create>/vocabularySize}" placeholder="{i18n>placeholder.vocabularySize}" liveChange=".onVocabularySizeChange"/>
                                            
                                            <!-- Max Sequence Length -->
                                            <Label text="{i18n>field.maxSequenceLength}"/>
                                            <StepInput id="maxSequenceLengthInput" value="{create>/maxSequenceLength}" min="64" max="4096" step="64" change=".onMaxSequenceLengthChange"/>
                                            
                                            <!-- Tokenizer -->
                                            <Label text="{i18n>field.tokenizer}"/>
                                            <ComboBox id="tokenizerCombo" selectedKey="{create>/tokenizer}" selectionChange=".onTokenizerChange">
                                                <core:Item key="wordpiece" text="{i18n>tokenizer.wordpiece}"/>
                                                <core:Item key="sentencepiece" text="{i18n>tokenizer.sentencepiece}"/>
                                                <core:Item key="bpe" text="{i18n>tokenizer.bpe}"/>
                                                <core:Item key="unigram" text="{i18n>tokenizer.unigram}"/>
                                                <core:Item key="char" text="{i18n>tokenizer.char}"/>
                                                <core:Item key="whitespace" text="{i18n>tokenizer.whitespace}"/>
                                            </ComboBox>
                                            
                                            <!-- Normalization -->
                                            <Label text="{i18n>field.normalization}"/>
                                            <Switch id="normalizationSwitch" state="{create>/normalization}" change=".onNormalizationChange"/>
                                            
                                        </f:content>
                                    </f:SimpleForm>
                                </content>
                            </IconTabFilter>
                            
                            <!-- Training Settings Tab -->
                            <IconTabFilter text="{i18n>tab.training}" key="training" icon="sap-icon://learning-assistant">
                                <content>
                                    <f:SimpleForm
                                        editable="true"
                                        layout="ResponsiveGridLayout"
                                        class="sapUiMediumMargin">
                                        
                                        <f:content>
                                            
                                            <!-- Learning Rate -->
                                            <Label text="{i18n>field.learningRate}"/>
                                            <Input id="learningRateInput" value="{create>/learningRate}" placeholder="{i18n>placeholder.learningRate}" liveChange=".onLearningRateChange"/>
                                            
                                            <!-- Batch Size -->
                                            <Label text="{i18n>field.batchSize}"/>
                                            <StepInput id="batchSizeInput" value="{create>/batchSize}" min="1" max="512" step="1" change=".onBatchSizeChange"/>
                                            
                                            <!-- Epochs -->
                                            <Label text="{i18n>field.epochs}"/>
                                            <StepInput id="epochsInput" value="{create>/epochs}" min="1" max="100" step="1" change=".onEpochsChange"/>
                                            
                                            <!-- Optimizer -->
                                            <Label text="{i18n>field.optimizer}"/>
                                            <ComboBox id="optimizerCombo" selectedKey="{create>/optimizer}" selectionChange=".onOptimizerChange">
                                                <core:Item key="adam" text="{i18n>optimizer.adam}"/>
                                                <core:Item key="adamw" text="{i18n>optimizer.adamw}"/>
                                                <core:Item key="sgd" text="{i18n>optimizer.sgd}"/>
                                                <core:Item key="rmsprop" text="{i18n>optimizer.rmsprop}"/>
                                                <core:Item key="adagrad" text="{i18n>optimizer.adagrad}"/>
                                                <core:Item key="lamb" text="{i18n>optimizer.lamb}"/>
                                                <core:Item key="radam" text="{i18n>optimizer.radam}"/>
                                                <core:Item key="lookahead" text="{i18n>optimizer.lookahead}"/>
                                                <core:Item key="ranger" text="{i18n>optimizer.ranger}"/>
                                            </ComboBox>
                                            
                                            <!-- Loss Function -->
                                            <Label text="{i18n>field.lossFunction}"/>
                                            <ComboBox id="lossFunctionCombo" selectedKey="{create>/lossFunction}" selectionChange=".onLossFunctionChange">
                                                <core:Item key="cosine" text="{i18n>loss.cosine}"/>
                                                <core:Item key="triplet" text="{i18n>loss.triplet}"/>
                                                <core:Item key="contrastive" text="{i18n>loss.contrastive}"/>
                                                <core:Item key="infonce" text="{i18n>loss.infonce}"/>
                                                <core:Item key="mse" text="{i18n>loss.mse}"/>
                                                <core:Item key="mae" text="{i18n>loss.mae}"/>
                                                <core:Item key="huber" text="{i18n>loss.huber}"/>
                                                <core:Item key="custom" text="{i18n>loss.custom}"/>
                                            </ComboBox>
                                            
                                            <!-- Regularization -->
                                            <Label text="{i18n>field.regularization}"/>
                                            <Input id="regularizationInput" value="{create>/regularization}" placeholder="{i18n>placeholder.regularization}" liveChange=".onRegularizationChange"/>
                                            
                                            <!-- Dropout -->
                                            <Label text="{i18n>field.dropout}"/>
                                            <Slider id="dropoutSlider" value="{create>/dropout}" min="0" max="0.5" step="0.05" enableTickmarks="true" change=".onDropoutChange"/>
                                            
                                            <!-- Warmup Steps -->
                                            <Label text="{i18n>field.warmupSteps}"/>
                                            <StepInput id="warmupStepsInput" value="{create>/warmupSteps}" min="0" max="10000" step="100" change=".onWarmupStepsChange"/>
                                            
                                            <!-- Gradient Clipping -->
                                            <Label text="{i18n>field.gradientClipping}"/>
                                            <Input id="gradientClippingInput" value="{create>/gradientClipping}" placeholder="{i18n>placeholder.gradientClipping}" liveChange=".onGradientClippingChange"/>
                                            
                                        </f:content>
                                    </f:SimpleForm>
                                </content>
                            </IconTabFilter>
                            
                            <!-- Optimization Settings Tab -->
                            <IconTabFilter text="{i18n>tab.optimization}" key="optimization" icon="sap-icon://performance">
                                <content>
                                    <f:SimpleForm
                                        editable="true"
                                        layout="ResponsiveGridLayout"
                                        class="sapUiMediumMargin">
                                        
                                        <f:content>
                                            
                                            <!-- Quantization -->
                                            <Label text="{i18n>field.quantization}"/>
                                            <Switch id="quantizationSwitch" state="{create>/quantization}" change=".onQuantizationChange"/>
                                            
                                            <!-- Pruning -->
                                            <Label text="{i18n>field.pruning}"/>
                                            <Switch id="pruningSwitch" state="{create>/pruning}" change=".onPruningChange"/>
                                            
                                            <!-- Distillation -->
                                            <Label text="{i18n>field.distillation}"/>
                                            <Switch id="distillationSwitch" state="{create>/distillation}" change=".onDistillationChange"/>
                                            
                                            <!-- Compression Ratio -->
                                            <Label text="{i18n>field.compressionRatio}"/>
                                            <Slider id="compressionRatioSlider" value="{create>/compressionRatio}" min="1" max="10" step="0.5" enableTickmarks="true" change=".onCompressionRatioChange"/>
                                            
                                            <!-- Optimization Target -->
                                            <Label text="{i18n>field.optimizationTarget}"/>
                                            <SegmentedButton id="optimizationTargetSegmented" selectedKey="{create>/optimizationTarget}" selectionChange=".onOptimizationTargetChange">
                                                <items>
                                                    <SegmentedButtonItem key="speed" text="Speed"/>
                                                    <SegmentedButtonItem key="balanced" text="Balanced"/>
                                                    <SegmentedButtonItem key="accuracy" text="Accuracy"/>
                                                </items>
                                            </SegmentedButton>
                                            
                                            <!-- Hardware Target -->
                                            <Label text="{i18n>field.hardwareTarget}"/>
                                            <ComboBox id="hardwareTargetCombo" selectedKey="{create>/hardwareTarget}" selectionChange=".onHardwareTargetChange">
                                                <core:Item key="cpu" text="{i18n>hardware.cpu}"/>
                                                <core:Item key="gpu" text="{i18n>hardware.gpu}"/>
                                                <core:Item key="tpu" text="{i18n>hardware.tpu}"/>
                                                <core:Item key="edge" text="{i18n>hardware.edge}"/>
                                                <core:Item key="mobile" text="{i18n>hardware.mobile}"/>
                                                <core:Item key="server" text="{i18n>hardware.server}"/>
                                            </ComboBox>
                                            
                                            <!-- Auto Optimization -->
                                            <Label text="{i18n>field.autoOptimization}"/>
                                            <Switch id="autoOptimizationSwitch" state="{create>/autoOptimization}" change=".onAutoOptimizationChange"/>
                                            
                                            <!-- Mixed Precision -->
                                            <Label text="{i18n>field.mixedPrecision}"/>
                                            <Switch id="mixedPrecisionSwitch" state="{create>/mixedPrecision}" change=".onMixedPrecisionChange"/>
                                            
                                        </f:content>
                                    </f:SimpleForm>
                                </content>
                            </IconTabFilter>
                            
                            <!-- Dataset Configuration Tab -->
                            <IconTabFilter text="{i18n>tab.dataset}" key="dataset" icon="sap-icon://database">
                                <content>
                                    <f:SimpleForm
                                        editable="true"
                                        layout="ResponsiveGridLayout"
                                        class="sapUiMediumMargin">
                                        
                                        <f:content>
                                            
                                            <!-- Dataset Name -->
                                            <Label text="{i18n>field.datasetName}" required="true"/>
                                            <Input id="datasetNameInput" value="{create>/datasetName}" placeholder="{i18n>placeholder.datasetPath}" required="true" valueState="{create>/datasetNameState}" valueStateText="{create>/datasetNameStateText}" liveChange=".onDatasetNameChange"/>
                                            
                                            <!-- Dataset Size -->
                                            <Label text="{i18n>field.datasetSize}"/>
                                            <Text id="datasetSizeText" text="{create>/datasetSizeDisplay}"/>
                                            
                                            <!-- Training Samples -->
                                            <Label text="{i18n>field.trainingSamples}"/>
                                            <StepInput id="trainingSamplesInput" value="{create>/trainingSamples}" min="100" max="10000000" step="1000" change=".onTrainingSamplesChange"/>
                                            
                                            <!-- Validation Samples -->
                                            <Label text="{i18n>field.validationSamples}"/>
                                            <StepInput id="validationSamplesInput" value="{create>/validationSamples}" min="10" max="1000000" step="100" change=".onValidationSamplesChange"/>
                                            
                                            <!-- Test Samples -->
                                            <Label text="{i18n>field.testSamples}"/>
                                            <StepInput id="testSamplesInput" value="{create>/testSamples}" min="10" max="1000000" step="100" change=".onTestSamplesChange"/>
                                            
                                            <!-- Data Augmentation -->
                                            <Label text="{i18n>field.dataAugmentation}"/>
                                            <MultiComboBox id="dataAugmentationMultiCombo" selectedKeys="{create>/dataAugmentation}" selectionChange=".onDataAugmentationChange">
                                                <core:Item key="synonym" text="{i18n>aug.synonym}"/>
                                                <core:Item key="backtranslation" text="{i18n>aug.backtranslation}"/>
                                                <core:Item key="paraphrase" text="{i18n>aug.paraphrase}"/>
                                                <core:Item key="noise" text="{i18n>aug.noise}"/>
                                                <core:Item key="dropout" text="{i18n>aug.dropout}"/>
                                                <core:Item key="mixup" text="{i18n>aug.mixup}"/>
                                                <core:Item key="cutmix" text="{i18n>aug.cutmix}"/>
                                            </MultiComboBox>
                                            
                                            <!-- Sampling Strategy -->
                                            <Label text="{i18n>field.samplingStrategy}"/>
                                            <ComboBox id="samplingStrategyCombo" selectedKey="{create>/samplingStrategy}" selectionChange=".onSamplingStrategyChange">
                                                <core:Item key="random" text="{i18n>sampling.random}"/>
                                                <core:Item key="stratified" text="{i18n>sampling.stratified}"/>
                                                <core:Item key="balanced" text="{i18n>sampling.balanced}"/>
                                                <core:Item key="weighted" text="{i18n>sampling.weighted}"/>
                                                <core:Item key="active" text="{i18n>sampling.active}"/>
                                                <core:Item key="hard_negative" text="{i18n>sampling.hard_negative}"/>
                                            </ComboBox>
                                            
                                            <!-- Class Balance -->
                                            <Label text="{i18n>field.classBalance}"/>
                                            <Switch id="classBalanceSwitch" state="{create>/classBalance}" change=".onClassBalanceChange"/>
                                            
                                        </f:content>
                                    </f:SimpleForm>
                                </content>
                            </IconTabFilter>
                            
                        </items>
                    </IconTabBar>
                    
                </content>
            </Page>
        </content>
        
        <beginButton>
            <Button text="{i18n>btn.cancel}" press=".onCancelCreateModel"/>
        </beginButton>
        <endButton>
            <Button text="{i18n>btn.create}" press=".onConfirmCreateModel" type="Emphasized" enabled="{create>/canCreate}"/>
        </endButton>
        
    </Dialog>
    
</core:FragmentDefinition>