{
  "environments": {
    "dev": {
      "description": "Development environment configuration",
      "cf": {
        "api": "https://api.cf.us10.hana.ondemand.com",
        "org": "company-dev",
        "space": "a2a-development"
      },
      "mta": {
        "extension_file": "mta-extensions/mta-dev.mtaext",
        "build_parameters": {
          "before-all": [
            "npm install",
            "npm run build:dev"
          ]
        }
      },
      "variables": {
        "sentry-dsn-staging": "${SENTRY_DSN_DEV}",
        "analytics-id-staging": "${ANALYTICS_ID_DEV}",
        "slack-webhook-staging": "${SLACK_WEBHOOK_DEV}",
        "session-secret": "${SESSION_SECRET_DEV}"
      },
      "services": {
        "hana-plan": "hdi-shared",
        "postgres-plan": "development",
        "redis-plan": "development",
        "ans-plan": "free"
      }
    },
    
    "staging": {
      "description": "Staging environment configuration",
      "cf": {
        "api": "https://api.cf.us10.hana.ondemand.com",
        "org": "company-staging",
        "space": "a2a-staging"
      },
      "mta": {
        "extension_file": "mta-extensions/mta-staging.mtaext",
        "build_parameters": {
          "before-all": [
            "npm install",
            "npm run build:staging",
            "npm run test:unit",
            "npm run security-scan"
          ]
        }
      },
      "variables": {
        "sentry-dsn-staging": "${SENTRY_DSN_STAGING}",
        "analytics-id-staging": "${ANALYTICS_ID_STAGING}",
        "slack-webhook-staging": "${SLACK_WEBHOOK_STAGING}",
        "session-secret": "${SESSION_SECRET_STAGING}"
      },
      "services": {
        "hana-plan": "schema",
        "postgres-plan": "standard",
        "redis-plan": "standard",
        "ans-plan": "standard"
      },
      "pre_deployment": [
        {
          "name": "Run Integration Tests",
          "command": "npm run test:integration"
        },
        {
          "name": "Database Migration Check",
          "command": "npm run db:migration:check"
        }
      ]
    },
    
    "prod": {
      "description": "Production environment configuration",
      "cf": {
        "api": "https://api.cf.us10.hana.ondemand.com",
        "org": "company-prod",
        "space": "a2a-production"
      },
      "mta": {
        "extension_file": "mta-extensions/mta-prod.mtaext",
        "build_parameters": {
          "before-all": [
            "npm install --production",
            "npm run build:prod",
            "npm run test:all",
            "npm run security-scan",
            "npm run compliance-check"
          ]
        }
      },
      "variables": {
        "sentry-dsn-prod": "${SENTRY_DSN_PROD}",
        "analytics-id-prod": "${ANALYTICS_ID_PROD}",
        "slack-webhook-prod": "${SLACK_WEBHOOK_PROD}",
        "pagerduty-webhook": "${PAGERDUTY_WEBHOOK}",
        "pagerduty-user": "${PAGERDUTY_USER}",
        "pagerduty-password": "${PAGERDUTY_PASSWORD}",
        "session-secret": "${SESSION_SECRET_PROD}",
        "redis-password": "${REDIS_PASSWORD_PROD}",
        "new-relic-key": "${NEW_RELIC_LICENSE_KEY}",
        "error-tracking-dsn": "${ERROR_TRACKING_DSN}"
      },
      "services": {
        "hana-plan": "enterprise",
        "postgres-plan": "enterprise",
        "redis-plan": "enterprise",
        "ans-plan": "enterprise"
      },
      "pre_deployment": [
        {
          "name": "Full Test Suite",
          "command": "npm run test:all"
        },
        {
          "name": "Security Audit",
          "command": "npm run security:audit"
        },
        {
          "name": "Performance Tests",
          "command": "npm run test:performance"
        },
        {
          "name": "Database Migration",
          "command": "npm run db:migration:prod"
        }
      ],
      "post_deployment": [
        {
          "name": "Health Check",
          "command": "npm run health-check:prod",
          "timeout": 300
        },
        {
          "name": "Smoke Tests",
          "command": "npm run test:smoke:prod",
          "timeout": 600
        }
      ],
      "rollback": {
        "strategy": "blue-green",
        "max_downtime": 60,
        "health_check_url": "/health",
        "health_check_timeout": 30
      }
    }
  },
  
  "deployment_pipeline": {
    "stages": [
      {
        "name": "build",
        "environment": "dev",
        "trigger": "on_commit",
        "steps": [
          "npm install",
          "npm run lint",
          "npm run test:unit",
          "npm run build:dev"
        ]
      },
      {
        "name": "test",
        "environment": "dev",
        "depends_on": ["build"],
        "steps": [
          "npm run test:integration",
          "npm run test:e2e"
        ]
      },
      {
        "name": "deploy_staging",
        "environment": "staging",
        "depends_on": ["test"],
        "trigger": "manual",
        "approval_required": true,
        "approvers": ["platform-team", "qa-team"]
      },
      {
        "name": "staging_tests",
        "environment": "staging",
        "depends_on": ["deploy_staging"],
        "steps": [
          "npm run test:staging",
          "npm run test:performance",
          "npm run security-scan"
        ]
      },
      {
        "name": "deploy_production",
        "environment": "prod",
        "depends_on": ["staging_tests"],
        "trigger": "manual",
        "approval_required": true,
        "approvers": ["platform-admin", "security-team", "business-owner"],
        "minimum_approvals": 2
      }
    ]
  },
  
  "monitoring": {
    "dev": {
      "metrics": false,
      "logging": "debug",
      "alerts": false
    },
    "staging": {
      "metrics": true,
      "logging": "info",
      "alerts": true,
      "alert_channels": ["slack"]
    },
    "prod": {
      "metrics": true,
      "logging": "warn",
      "alerts": true,
      "alert_channels": ["email", "pagerduty", "slack"],
      "sla_monitoring": true,
      "uptime_checks": true
    }
  },
  
  "backup_strategy": {
    "staging": {
      "frequency": "daily",
      "retention": "7 days",
      "backup_time": "02:00"
    },
    "prod": {
      "frequency": "daily",
      "retention": "30 days",
      "backup_time": "01:00",
      "cross_region_replication": true,
      "point_in_time_recovery": true
    }
  }
}