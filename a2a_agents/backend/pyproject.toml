[build-system]
requires = ["setuptools>=65", "setuptools-scm>=7.1"]
build-backend = "setuptools.build_meta"

[project]
name = "a2a-agents"
version = "0.2.9"
description = "Agent-to-Agent (A2A) communication network for enterprise data integration"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "A2A Development Team", email = "dev@a2a-network.com"},
]
keywords = ["agents", "data-integration", "blockchain", "enterprise", "microservices"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "httpx==0.24.1",
    "python-dotenv==1.0.0",
    "pydantic==2.5.2",
    "pydantic-settings==2.1.0",
    "supabase==2.0.0",
    "python-multipart==0.0.6",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "email-validator==2.1.0",
    "pandas==2.1.4",
    "hdbcli==2.19.21",
    "langchain-hana>=0.2.1",
    "redis[hiredis]==5.0.1",
    "tenacity==8.2.3",
    "web3==6.15.1",
    "eth-account==0.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "ipdb>=0.13.13",
]

test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "faker>=20.0.0",
    "factory-boy>=3.3.0",
]

telemetry = [
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
    "opentelemetry-instrumentation==0.42b0",
    "opentelemetry-instrumentation-fastapi==0.42b0",
    "opentelemetry-instrumentation-httpx==0.42b0",
    "opentelemetry-instrumentation-redis==0.42b0",
    "opentelemetry-instrumentation-logging==0.42b0",
    "opentelemetry-exporter-otlp==1.21.0",
    "opentelemetry-exporter-prometheus==0.42b0",
    "opentelemetry-propagator-b3==1.21.0",
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
a2a-agent = "a2a.cli:main"
a2a-deploy = "a2a.deploy:main"

[project.urls]
Homepage = "https://github.com/a2a-network/a2a-agents"
Documentation = "https://docs.a2a-network.com"
Repository = "https://github.com/a2a-network/a2a-agents"
Issues = "https://github.com/a2a-network/a2a-agents/issues"

[tool.setuptools]
packages = ["a2a"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
a2a = [
    "config/*.json",
    "config/templates/*.yaml",
    "agents/*/active/*.yaml",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | legacy
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # flake8-bandit
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # Use of assert detected
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "legacy",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S105", "S106"]
"launch_*.py" = ["T20"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "hdbcli.*",
    "langchain_hana.*",
    "web3.*",
    "eth_account.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=a2a",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "requires_db: marks tests that require database connection",
    "requires_blockchain: marks tests that require blockchain connection",
]

[tool.coverage.run]
source = ["src/a2a"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/legacy/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
show_missing = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
skip_gitignore = true
known_first_party = ["a2a"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]