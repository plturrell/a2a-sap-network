# OpenTelemetry Collector Configuration
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  prometheus:
    config:
      scrape_configs:
        - job_name: 'a2a-agents'
          scrape_interval: 10s
          static_configs:
            - targets: ['host.docker.internal:8000']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024

  attributes:
    actions:
      - key: environment
        value: development
        action: upsert
      - key: service.namespace
        value: a2a
        action: upsert

  resource:
    attributes:
      - key: service.instance.id
        from_attribute: agent.id
        action: insert

exporters:
  # Jaeger exporter for traces
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: a2a
    const_labels:
      environment: development

  # Logging exporter for debugging
  logging:
    loglevel: info

  # OTLP exporter for external systems
  otlp/external:
    endpoint: ${EXTERNAL_OTLP_ENDPOINT}
    headers:
      api-key: ${EXTERNAL_API_KEY}

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch, attributes, resource]
      exporters: [jaeger, logging]
    
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch, attributes, resource]
      exporters: [prometheus, logging]