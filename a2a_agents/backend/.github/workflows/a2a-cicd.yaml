name: A2A Network CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - '.github/workflows/a2a-cicd.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/**'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/a2a-network

jobs:
  test-common:
    name: Test A2A Common Library
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd services/shared/a2a_common
        pip install -e .[test]
    
    - name: Run tests
      run: |
        cd services/shared/a2a_common
        pytest tests/ --cov=a2a_common --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  build-agents:
    name: Build A2A Agent Images
    runs-on: ubuntu-latest
    needs: test-common
    strategy:
      matrix:
        agent:
          - agent0_data_product
          - agent1_standardization
          - agent2_ai_preparation
          - agent3_vector_processing
          - agent_manager
          - data_manager
          - catalog_manager
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.agent }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=sha
    
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: services/${{ matrix.agent }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  integration-test:
    name: A2A Integration Tests
    runs-on: ubuntu-latest
    needs: build-agents
    steps:
    - uses: actions/checkout@v3
    
    - name: Start A2A network
      run: |
        cd services
        docker-compose up -d
        sleep 30  # Wait for services to start
    
    - name: Run integration tests
      run: |
        cd services/tests
        python -m pytest test_a2a_pipeline.py -v
    
    - name: Collect logs
      if: failure()
      run: |
        docker-compose logs > a2a-logs.txt
        
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: a2a-logs
        path: a2a-logs.txt

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d > kubeconfig
        export KUBECONFIG=$(pwd)/kubeconfig
    
    - name: Deploy with Kustomize
      run: |
        cd services/k8s
        kubectl apply -k overlays/dev
    
    - name: Wait for rollout
      run: |
        kubectl -n a2a-network rollout status deployment/agent0-data-product
        kubectl -n a2a-network rollout status deployment/agent1-standardization
        kubectl -n a2a-network rollout status deployment/agent-manager

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - uses: actions/checkout@v3
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG_PROD }}" | base64 -d > kubeconfig
        export KUBECONFIG=$(pwd)/kubeconfig
    
    - name: Deploy with Kustomize
      run: |
        cd services/k8s
        kubectl apply -k overlays/prod
    
    - name: Wait for rollout
      run: |
        kubectl -n a2a-network rollout status deployment/agent0-data-product
        kubectl -n a2a-network rollout status deployment/agent1-standardization
        kubectl -n a2a-network rollout status deployment/agent-manager
    
    - name: Run smoke tests
      run: |
        cd services/tests
        python -m pytest test_a2a_smoke.py -v --prod