[tool:pytest]
# Pytest configuration for A2A Network project - SAP Compliant

# Test discovery
testpaths = tests backend/tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov=a2a
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=junit.xml
    --benchmark-only
    --benchmark-autosave

# Async support
asyncio_mode = auto

# Test markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require external services
    e2e: End-to-end tests
    slow: Tests that take a long time to run
    requires_db: Tests that require database connection
    requires_blockchain: Tests that require blockchain connection
    requires_redis: Tests that require Redis connection
    requires_network: Tests that require network access
    agent0: Tests specific to Agent 0 (Data Product)
    agent1: Tests specific to Agent 1 (Standardization)
    agent2: Tests specific to Agent 2 (AI Preparation)
    agent3: Tests specific to Agent 3 (Vector Processing)
    agent4: Tests specific to Agent 4 (Calculation Validation)
    agent5: Tests specific to Agent 5 (QA Validation)
    data_manager: Tests specific to Data Manager
    catalog_manager: Tests specific to Catalog Manager
    agent_manager: Tests specific to Agent Manager
    agent_builder: Tests specific to Agent Builder
    security: Security-related tests
    performance: Performance/load tests
    smoke: Smoke tests for quick validation
    sap: SAP-specific integration tests
    benchmark: Performance benchmark tests

# Minimum version
minversion = 7.0

# Test session configuration
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:aiosqlite.*
    ignore::PendingDeprecationWarning
    error::a2a.core.*:UserWarning

# Coverage configuration
[coverage:run]
source = src/a2a
branch = True
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */legacy/*
    */venv/*
    */.venv/*
    */build/*
    */dist/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    @overload

precision = 2
show_missing = True
skip_covered = False
skip_empty = True

[coverage:html]
directory = htmlcov
title = A2A Network Coverage Report

[coverage:xml]
output = coverage.xml