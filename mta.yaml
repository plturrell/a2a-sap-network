# Multi-Target Application (MTA) Deployment Descriptor
# SAP Business Technology Platform (BTP) deployment configuration
# Schema version 3.3 supports advanced deployment features and parallel processing
_schema-version: "3.3"

# Unique identifier for the MTA application across all BTP landscapes
# Used for service binding, routing, and application lifecycle management
ID: a2a-agent-platform

# Semantic versioning for deployment tracking and rollback capabilities
# Increment for each deployment to maintain version history
version: 1.0.0

# Human-readable description for BTP cockpit and deployment logs
description: A2A Agent Platform - Enterprise Financial Data Processing

# Global deployment parameters affecting all modules
# These parameters are inherited by all modules unless overridden
parameters:
  # HTML5 repository deployment mode for optimized static content delivery
  # Enables CDN caching and improved performance for frontend assets
  deploy_mode: html5-repo
  
  # Parallel deployment reduces total deployment time by processing modules concurrently
  # Critical for enterprise environments with multiple modules and services
  enable-parallel-deployments: true

# Global build configuration executed before module-specific builds
# Ensures consistent dependency management and build artifacts
build-parameters:
  before-all:
    - builder: custom
      commands:
        # Install only production dependencies to reduce deployment size
        # Excludes devDependencies for security and performance optimization
        - npm install --production
        
        # Execute build process for all modules (frontend compilation, asset optimization)
        # Generates production-ready artifacts for deployment
        - npm run build

# Modules definition
modules:
  # Backend application
  - name: a2a-backend
    type: python
    path: backend
    parameters:
      buildpack: python_buildpack
      memory: 2048M
      disk-quota: 2048M
      command: python main.py
    properties:
      ENV_TYPE: ${space}
      LOG_LEVEL: ${log-level}
    requires:
      - name: a2a-hana-hdi
      - name: a2a-postgres-db
      - name: a2a-redis
      - name: a2a-xsuaa
      - name: a2a-connectivity
      - name: a2a-destination
      - name: a2a-ans
      - name: a2a-application-logs
    provides:
      - name: a2a-backend-api
        properties:
          url: ${default-url}

  # Frontend application
  - name: a2a-frontend
    type: html5
    path: frontend
    build-parameters:
      build-result: dist
      builder: custom
      commands:
        - npm install
        - npm run build:cf
      supported-platforms: []
    parameters:
      memory: 256M
      disk-quota: 512M

  # UI deployer
  - name: a2a-ui-deployer
    type: com.sap.application.content
    path: .
    requires:
      - name: a2a-html5-repo-host
        parameters:
          content-target: true
    build-parameters:
      build-result: resources
      requires:
        - artifacts:
            - a2afrontend.zip
          name: a2a-frontend
          target-path: resources/

  # Application router
  - name: a2a-approuter
    type: approuter.nodejs
    path: approuter
    parameters:
      memory: 256M
      disk-quota: 512M
      keep-existing-routes: true
    properties:
      TENANT_HOST_PATTERN: '^(.*)-${space}-${app-name}.${default-domain}'
    requires:
      - name: a2a-xsuaa
      - name: a2a-html5-repo-runtime
      - name: a2a-backend-api
        group: destinations
        properties:
          name: backend
          url: ~{url}
          forwardAuthToken: true
          strictSSL: true

  # Database deployer
  - name: a2a-db-deployer
    type: hdb
    path: db
    parameters:
      buildpack: nodejs_buildpack
      memory: 256M
      disk-quota: 512M
    requires:
      - name: a2a-hana-hdi

# Resources definition
resources:
  # SAP HANA HDI Container
  - name: a2a-hana-hdi
    type: com.sap.xs.hdi-container
    parameters:
      service-plan: ${hana-plan}
    properties:
      hdi-service-name: ${service-name}-hana-hdi

  # PostgreSQL Database (Hyperscaler option)
  - name: a2a-postgres-db
    type: postgresql-db
    parameters:
      service-plan: ${postgres-plan}
    properties:
      postgres-service-name: ${service-name}-postgres

  # Redis Cache
  - name: a2a-redis
    type: redis
    parameters:
      service-plan: ${redis-plan}
      config:
        maxmemory-policy: allkeys-lru

  # XSUAA Service
  - name: a2a-xsuaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        tenant-mode: shared
        scopes: 
          - name: $XSAPPNAME.Admin
            description: Administrator access
          - name: $XSAPPNAME.AgentOperator
            description: Agent operator access
          - name: $XSAPPNAME.DataViewer
            description: Data viewer access
        role-templates:
          - name: Admin
            description: Administrator role
            scope-references:
              - $XSAPPNAME.Admin
          - name: AgentOperator
            description: Agent operator role
            scope-references:
              - $XSAPPNAME.AgentOperator
              - $XSAPPNAME.DataViewer
          - name: DataViewer
            description: Data viewer role
            scope-references:
              - $XSAPPNAME.DataViewer
        oauth2-configuration:
          redirect-uris:
            - https://*.${default-domain}/**
            - http://localhost:3000/**

  # Connectivity Service
  - name: a2a-connectivity
    type: org.cloudfoundry.managed-service
    parameters:
      service: connectivity
      service-plan: lite

  # Destination Service
  - name: a2a-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite

  # Alert Notification Service
  - name: a2a-ans
    type: org.cloudfoundry.managed-service
    parameters:
      service: alert-notification
      service-plan: ${ans-plan}

  # Application Logging Service
  - name: a2a-application-logs
    type: org.cloudfoundry.managed-service
    parameters:
      service: application-logs
      service-plan: lite

  # HTML5 Repository Host
  - name: a2a-html5-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host

  # HTML5 Repository Runtime
  - name: a2a-html5-repo-runtime
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-runtime