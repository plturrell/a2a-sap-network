<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" 
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" 
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
                  id="ComputationQualityTestingProcesses"
                  targetNamespace="http://computation.quality.testing.processes">

  <!-- Main Process: Computation Quality Testing Task Execution -->
  <bpmn:process id="ComputationTestingTaskProcess" name="Computation Quality Testing Task Execution Process" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_TestingTaskRequest" name="Testing Task Request Received">
      <bpmn:outgoing>SequenceFlow_ToValidateRequest</bpmn:outgoing>
      <bpmn:messageEventDefinition messageRef="Message_TestingTaskRequest"/>
    </bpmn:startEvent>

    <!-- Validate Testing Task Request -->
    <bpmn:serviceTask id="ServiceTask_ValidateTestingRequest" name="Validate Testing Task Request" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToValidateRequest</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToInitializeContext</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestingTaskRequest" name="taskRequest"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_RequestValidation" name="requestValidation"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Initialize Task Context -->
    <bpmn:serviceTask id="ServiceTask_InitializeTestContext" name="Initialize Test Context & Streaming" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToInitializeContext</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToServiceDiscovery</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_RequestValidation" name="requestValidation"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_TestContext" name="testContext"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Service Discovery Subprocess -->
    <bpmn:callActivity id="CallActivity_ServiceDiscovery" name="Computational Service Discovery" calledElement="ServiceDiscoveryProcess">
      <bpmn:incoming>SequenceFlow_ToServiceDiscovery</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToValidateServices</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestContext" name="testContext"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
      </bpmn:ioSpecification>
    </bpmn:callActivity>

    <!-- Validate Discovery Results -->
    <bpmn:serviceTask id="ServiceTask_ValidateServiceResults" name="Validate Service Discovery Results" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToValidateServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToServiceGateway</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ServiceValidation" name="serviceValidation"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Service Discovery Results Gateway -->
    <bpmn:exclusiveGateway id="ExclusiveGateway_ServiceResults" name="Services Discovered?">
      <bpmn:incoming>SequenceFlow_ToServiceGateway</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ServicesFound</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_NoServices</bpmn:outgoing>
    </bpmn:exclusiveGateway>

    <!-- Template Loading & Preparation -->
    <bpmn:callActivity id="CallActivity_TemplatePreparation" name="Load & Prepare Test Templates" calledElement="TemplatePreparationProcess">
      <bpmn:incoming>SequenceFlow_ServicesFound</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToTestGeneration</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_PreparedTemplates" name="preparedTemplates"/>
      </bpmn:ioSpecification>
    </bpmn:callActivity>

    <!-- Dynamic Test Generation -->
    <bpmn:callActivity id="CallActivity_DynamicTestGeneration" name="Dynamic Test Case Generation" calledElement="TestGenerationProcess">
      <bpmn:incoming>SequenceFlow_ToTestGeneration</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToTestExecution</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_PreparedTemplates" name="preparedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
      </bpmn:ioSpecification>
    </bpmn:callActivity>

    <!-- Test Execution & Validation -->
    <bpmn:callActivity id="CallActivity_TestExecution" name="Execute Tests & Validate Results" calledElement="TestExecutionProcess">
      <bpmn:incoming>SequenceFlow_ToTestExecution</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToQualityAnalysis</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_TestResults" name="testResults"/>
      </bpmn:ioSpecification>
    </bpmn:callActivity>

    <!-- Quality Analysis & Scoring -->
    <bpmn:serviceTask id="ServiceTask_QualityAnalysis" name="Analyze Quality Metrics & Generate Scores" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToQualityAnalysis</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToReportGeneration</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestResults" name="testResults"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_QualityAnalysis" name="qualityAnalysis"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Generate Comprehensive Report -->
    <bpmn:serviceTask id="ServiceTask_GenerateQualityReport" name="Generate Comprehensive Quality Report" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToReportGeneration</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToNotifyCompletion</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_QualityAnalysis" name="qualityAnalysis"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestResults" name="testResults"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_QualityReport" name="qualityReport"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Notify Task Completion -->
    <bpmn:serviceTask id="ServiceTask_NotifyTaskCompletion" name="Notify Testing Task Completion" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToNotifyCompletion</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToSuccessEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_QualityReport" name="qualityReport"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestContext" name="testContext"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_CompletionNotification" name="completionNotification"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Success End Event -->
    <bpmn:endEvent id="EndEvent_TaskSuccess" name="Testing Task Completed Successfully">
      <bpmn:incoming>SequenceFlow_ToSuccessEnd</bpmn:incoming>
      <bpmn:messageEventDefinition messageRef="Message_TaskCompletion"/>
    </bpmn:endEvent>

    <!-- Handle No Services Found -->
    <bpmn:serviceTask id="ServiceTask_HandleNoServices" name="Handle No Services Discovery" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_NoServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToNoServicesEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_ServiceValidation" name="serviceValidation"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_NoServicesResponse" name="noServicesResponse"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- No Services End Event -->
    <bpmn:endEvent id="EndEvent_NoServices" name="No Services Found">
      <bpmn:incoming>SequenceFlow_ToNoServicesEnd</bpmn:incoming>
      <bpmn:messageEventDefinition messageRef="Message_NoServicesFound"/>
    </bpmn:endEvent>

    <!-- Sequence Flows -->
    <bpmn:sequenceFlow id="SequenceFlow_ToValidateRequest" sourceRef="StartEvent_TestingTaskRequest" targetRef="ServiceTask_ValidateTestingRequest"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToInitializeContext" sourceRef="ServiceTask_ValidateTestingRequest" targetRef="ServiceTask_InitializeTestContext"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToServiceDiscovery" sourceRef="ServiceTask_InitializeTestContext" targetRef="CallActivity_ServiceDiscovery"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToValidateServices" sourceRef="CallActivity_ServiceDiscovery" targetRef="ServiceTask_ValidateServiceResults"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToServiceGateway" sourceRef="ServiceTask_ValidateServiceResults" targetRef="ExclusiveGateway_ServiceResults"/>
    
    <bpmn:sequenceFlow id="SequenceFlow_ServicesFound" sourceRef="ExclusiveGateway_ServiceResults" targetRef="CallActivity_TemplatePreparation">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${discoveredServices.size() > 0}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    
    <bpmn:sequenceFlow id="SequenceFlow_NoServices" sourceRef="ExclusiveGateway_ServiceResults" targetRef="ServiceTask_HandleNoServices">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${discoveredServices.size() == 0}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    
    <bpmn:sequenceFlow id="SequenceFlow_ToTestGeneration" sourceRef="CallActivity_TemplatePreparation" targetRef="CallActivity_DynamicTestGeneration"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToTestExecution" sourceRef="CallActivity_DynamicTestGeneration" targetRef="CallActivity_TestExecution"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToQualityAnalysis" sourceRef="CallActivity_TestExecution" targetRef="ServiceTask_QualityAnalysis"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToReportGeneration" sourceRef="ServiceTask_QualityAnalysis" targetRef="ServiceTask_GenerateQualityReport"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToNotifyCompletion" sourceRef="ServiceTask_GenerateQualityReport" targetRef="ServiceTask_NotifyTaskCompletion"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToSuccessEnd" sourceRef="ServiceTask_NotifyTaskCompletion" targetRef="EndEvent_TaskSuccess"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToNoServicesEnd" sourceRef="ServiceTask_HandleNoServices" targetRef="EndEvent_NoServices"/>

  </bpmn:process>

  <!-- Sub-Process: Service Discovery -->
  <bpmn:process id="ServiceDiscoveryProcess" name="Computational Service Discovery Process" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_ServiceDiscovery" name="Start Service Discovery">
      <bpmn:outgoing>SequenceFlow_ToParseEndpoints</bpmn:outgoing>
    </bpmn:startEvent>

    <!-- Parse Service Endpoints -->
    <bpmn:serviceTask id="ServiceTask_ParseServiceEndpoints" name="Parse Service Registry Endpoints" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToParseEndpoints</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToDiscoverServices</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestContext" name="testContext"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ParsedEndpoints" name="parsedEndpoints"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Discover Available Services -->
    <bpmn:serviceTask id="ServiceTask_DiscoverServices" name="Discover Available Computational Services" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToDiscoverServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToAnalyzeCapabilities</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_ParsedEndpoints" name="parsedEndpoints"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_RawServiceData" name="rawServiceData"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Analyze Service Capabilities -->
    <bpmn:serviceTask id="ServiceTask_AnalyzeCapabilities" name="Analyze Service Capabilities & Schemas" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToAnalyzeCapabilities</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToCategorizeServices</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_RawServiceData" name="rawServiceData"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_AnalyzedServices" name="analyzedServices"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Categorize & Filter Services -->
    <bpmn:serviceTask id="ServiceTask_CategorizeServices" name="Categorize & Filter Services by Type" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToCategorizeServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToValidateServices</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_AnalyzedServices" name="analyzedServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_CategorizedServices" name="categorizedServices"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Validate Service Accessibility -->
    <bpmn:serviceTask id="ServiceTask_ValidateServiceAccess" name="Validate Service Accessibility & Permissions" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToValidateServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToCacheServices</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_CategorizedServices" name="categorizedServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ValidatedServices" name="validatedServices"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Cache Service Metadata -->
    <bpmn:serviceTask id="ServiceTask_CacheServiceMetadata" name="Cache Service Metadata" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToCacheServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToDiscoveryEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_ValidatedServices" name="validatedServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_CachedServices" name="cachedServices"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Discovery End Event -->
    <bpmn:endEvent id="EndEvent_ServiceDiscoveryComplete" name="Service Discovery Complete">
      <bpmn:incoming>SequenceFlow_ToDiscoveryEnd</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Discovery Sequence Flows -->
    <bpmn:sequenceFlow id="SequenceFlow_ToParseEndpoints" sourceRef="StartEvent_ServiceDiscovery" targetRef="ServiceTask_ParseServiceEndpoints"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToDiscoverServices" sourceRef="ServiceTask_ParseServiceEndpoints" targetRef="ServiceTask_DiscoverServices"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToAnalyzeCapabilities" sourceRef="ServiceTask_DiscoverServices" targetRef="ServiceTask_AnalyzeCapabilities"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToCategorizeServices" sourceRef="ServiceTask_AnalyzeCapabilities" targetRef="ServiceTask_CategorizeServices"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToValidateServices" sourceRef="ServiceTask_CategorizeServices" targetRef="ServiceTask_ValidateServiceAccess"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToCacheServices" sourceRef="ServiceTask_ValidateServiceAccess" targetRef="ServiceTask_CacheServiceMetadata"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToDiscoveryEnd" sourceRef="ServiceTask_CacheServiceMetadata" targetRef="EndEvent_ServiceDiscoveryComplete"/>

  </bpmn:process>

  <!-- Sub-Process: Template Preparation -->
  <bpmn:process id="TemplatePreparationProcess" name="Test Template Preparation Process" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_TemplatePreparation" name="Start Template Preparation">
      <bpmn:outgoing>SequenceFlow_ToLoadTemplates</bpmn:outgoing>
    </bpmn:startEvent>

    <!-- Load Template Repository -->
    <bpmn:serviceTask id="ServiceTask_LoadTemplateRepository" name="Load Template Repository" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToLoadTemplates</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToMatchTemplates</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_TemplateRepository" name="templateRepository"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Match Templates to Services -->
    <bpmn:serviceTask id="ServiceTask_MatchTemplatesToServices" name="Match Templates to Service Capabilities" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToMatchTemplates</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToCustomizeTemplates</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TemplateRepository" name="templateRepository"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_MatchedTemplates" name="matchedTemplates"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Customize Template Parameters -->
    <bpmn:serviceTask id="ServiceTask_CustomizeTemplateParameters" name="Customize Template Parameters" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToCustomizeTemplates</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToValidateTemplates</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_MatchedTemplates" name="matchedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_CustomizedTemplates" name="customizedTemplates"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Validate Template Compatibility -->
    <bpmn:serviceTask id="ServiceTask_ValidateTemplateCompatibility" name="Validate Template Compatibility" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToValidateTemplates</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToTemplatePreparationEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_CustomizedTemplates" name="customizedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ValidatedTemplates" name="validatedTemplates"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Template Preparation End Event -->
    <bpmn:endEvent id="EndEvent_TemplatePreparationComplete" name="Template Preparation Complete">
      <bpmn:incoming>SequenceFlow_ToTemplatePreparationEnd</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Template Preparation Sequence Flows -->
    <bpmn:sequenceFlow id="SequenceFlow_ToLoadTemplates" sourceRef="StartEvent_TemplatePreparation" targetRef="ServiceTask_LoadTemplateRepository"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToMatchTemplates" sourceRef="ServiceTask_LoadTemplateRepository" targetRef="ServiceTask_MatchTemplatesToServices"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToCustomizeTemplates" sourceRef="ServiceTask_MatchTemplatesToServices" targetRef="ServiceTask_CustomizeTemplateParameters"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToValidateTemplates" sourceRef="ServiceTask_CustomizeTemplateParameters" targetRef="ServiceTask_ValidateTemplateCompatibility"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToTemplatePreparationEnd" sourceRef="ServiceTask_ValidateTemplateCompatibility" targetRef="EndEvent_TemplatePreparationComplete"/>

  </bpmn:process>

  <!-- Sub-Process: Test Generation -->
  <bpmn:process id="TestGenerationProcess" name="Dynamic Test Generation Process" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_TestGeneration" name="Start Test Generation">
      <bpmn:outgoing>SequenceFlow_ToAnalyzeServices</bpmn:outgoing>
    </bpmn:startEvent>

    <!-- Analyze Service Characteristics -->
    <bpmn:serviceTask id="ServiceTask_AnalyzeServiceCharacteristics" name="Analyze Service Input/Output Characteristics" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToAnalyzeServices</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToSelectTemplates</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_DiscoveredServices" name="discoveredServices"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ServiceCharacteristics" name="serviceCharacteristics"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Select & Instantiate Templates -->
    <bpmn:serviceTask id="ServiceTask_SelectTemplates" name="Select & Instantiate Test Templates" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToSelectTemplates</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToGenerateAccuracyTests</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_ServiceCharacteristics" name="serviceCharacteristics"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_PreparedTemplates" name="preparedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_InstantiatedTemplates" name="instantiatedTemplates"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Generate Accuracy Tests -->
    <bpmn:serviceTask id="ServiceTask_GenerateAccuracyTests" name="Generate Accuracy Test Cases" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToGenerateAccuracyTests</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToGeneratePerformanceTests</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_InstantiatedTemplates" name="instantiatedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_AccuracyTests" name="accuracyTests"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Generate Performance Tests -->
    <bpmn:serviceTask id="ServiceTask_GeneratePerformanceTests" name="Generate Performance Test Cases" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToGeneratePerformanceTests</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToGenerateEdgeCaseTests</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_InstantiatedTemplates" name="instantiatedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_PerformanceTests" name="performanceTests"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Generate Edge Case Tests -->
    <bpmn:serviceTask id="ServiceTask_GenerateEdgeCaseTests" name="Generate Edge Case & Stress Tests" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToGenerateEdgeCaseTests</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToPrioritizeTests</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_InstantiatedTemplates" name="instantiatedTemplates"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_EdgeCaseTests" name="edgeCaseTests"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Prioritize & Optimize Tests -->
    <bpmn:serviceTask id="ServiceTask_PrioritizeTests" name="Prioritize & Optimize Test Suite" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToPrioritizeTests</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToGenerationEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_AccuracyTests" name="accuracyTests"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_PerformanceTests" name="performanceTests"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_EdgeCaseTests" name="edgeCaseTests"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_OptimizedTestSuite" name="optimizedTestSuite"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Generation End Event -->
    <bpmn:endEvent id="EndEvent_TestGenerationComplete" name="Test Generation Complete">
      <bpmn:incoming>SequenceFlow_ToGenerationEnd</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Generation Sequence Flows -->
    <bpmn:sequenceFlow id="SequenceFlow_ToAnalyzeServices" sourceRef="StartEvent_TestGeneration" targetRef="ServiceTask_AnalyzeServiceCharacteristics"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToSelectTemplates" sourceRef="ServiceTask_AnalyzeServiceCharacteristics" targetRef="ServiceTask_SelectTemplates"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToGenerateAccuracyTests" sourceRef="ServiceTask_SelectTemplates" targetRef="ServiceTask_GenerateAccuracyTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToGeneratePerformanceTests" sourceRef="ServiceTask_GenerateAccuracyTests" targetRef="ServiceTask_GeneratePerformanceTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToGenerateEdgeCaseTests" sourceRef="ServiceTask_GeneratePerformanceTests" targetRef="ServiceTask_GenerateEdgeCaseTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToPrioritizeTests" sourceRef="ServiceTask_GenerateEdgeCaseTests" targetRef="ServiceTask_PrioritizeTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToGenerationEnd" sourceRef="ServiceTask_PrioritizeTests" targetRef="EndEvent_TestGenerationComplete"/>

  </bpmn:process>

  <!-- Sub-Process: Test Execution & Validation -->
  <bpmn:process id="TestExecutionProcess" name="Test Execution & Validation Process" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_TestExecution" name="Start Test Execution">
      <bpmn:outgoing>SequenceFlow_ToSetupEnvironment</bpmn:outgoing>
    </bpmn:startEvent>

    <!-- Setup Test Environment -->
    <bpmn:serviceTask id="ServiceTask_SetupTestEnvironment" name="Setup Isolated Test Environment" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToSetupEnvironment</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToExecuteTests</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_TestEnvironment" name="testEnvironment"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Parallel Test Execution Gateway -->
    <bpmn:parallelGateway id="ParallelGateway_TestExecution" name="Execute Test Categories in Parallel">
      <bpmn:incoming>SequenceFlow_ToExecuteTests</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToAccuracyExecution</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_ToPerformanceExecution</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_ToEdgeCaseExecution</bpmn:outgoing>
    </bpmn:parallelGateway>

    <!-- Execute Accuracy Tests -->
    <bpmn:serviceTask id="ServiceTask_ExecuteAccuracyTests" name="Execute Accuracy Tests" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToAccuracyExecution</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_FromAccuracyExecution</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestEnvironment" name="testEnvironment"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_AccuracyResults" name="accuracyResults"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Execute Performance Tests -->
    <bpmn:serviceTask id="ServiceTask_ExecutePerformanceTests" name="Execute Performance Tests" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToPerformanceExecution</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_FromPerformanceExecution</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestEnvironment" name="testEnvironment"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_PerformanceResults" name="performanceResults"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Execute Edge Case Tests -->
    <bpmn:serviceTask id="ServiceTask_ExecuteEdgeCaseTests" name="Execute Edge Case Tests" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToEdgeCaseExecution</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_FromEdgeCaseExecution</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_GeneratedTests" name="generatedTests"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_TestEnvironment" name="testEnvironment"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_EdgeCaseResults" name="edgeCaseResults"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Convergence Gateway -->
    <bpmn:parallelGateway id="ParallelGateway_Convergence" name="Converge Test Results">
      <bpmn:incoming>SequenceFlow_FromAccuracyExecution</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_FromPerformanceExecution</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_FromEdgeCaseExecution</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToAggregateResults</bpmn:outgoing>
    </bpmn:parallelGateway>

    <!-- Aggregate Test Results -->
    <bpmn:serviceTask id="ServiceTask_AggregateResults" name="Aggregate & Correlate Test Results" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToAggregateResults</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToValidateResults</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_AccuracyResults" name="accuracyResults"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_PerformanceResults" name="performanceResults"/>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_EdgeCaseResults" name="edgeCaseResults"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_AggregatedResults" name="aggregatedResults"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Validate Results Integrity -->
    <bpmn:serviceTask id="ServiceTask_ValidateResultsIntegrity" name="Validate Results Integrity & Completeness" implementation="##WebService">
      <bpmn:incoming>SequenceFlow_ToValidateResults</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_ToExecutionEnd</bpmn:outgoing>
      <bpmn:ioSpecification>
        <bpmn:dataInput itemSubjectRef="ItemDefinition_AggregatedResults" name="aggregatedResults"/>
        <bpmn:dataOutput itemSubjectRef="ItemDefinition_ValidatedResults" name="validatedResults"/>
      </bpmn:ioSpecification>
    </bpmn:serviceTask>

    <!-- Execution End Event -->
    <bpmn:endEvent id="EndEvent_TestExecutionComplete" name="Test Execution Complete">
      <bpmn:incoming>SequenceFlow_ToExecutionEnd</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Execution Sequence Flows -->
    <bpmn:sequenceFlow id="SequenceFlow_ToSetupEnvironment" sourceRef="StartEvent_TestExecution" targetRef="ServiceTask_SetupTestEnvironment"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToExecuteTests" sourceRef="ServiceTask_SetupTestEnvironment" targetRef="ParallelGateway_TestExecution"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToAccuracyExecution" sourceRef="ParallelGateway_TestExecution" targetRef="ServiceTask_ExecuteAccuracyTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToPerformanceExecution" sourceRef="ParallelGateway_TestExecution" targetRef="ServiceTask_ExecutePerformanceTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToEdgeCaseExecution" sourceRef="ParallelGateway_TestExecution" targetRef="ServiceTask_ExecuteEdgeCaseTests"/>
    <bpmn:sequenceFlow id="SequenceFlow_FromAccuracyExecution" sourceRef="ServiceTask_ExecuteAccuracyTests" targetRef="ParallelGateway_Convergence"/>
    <bpmn:sequenceFlow id="SequenceFlow_FromPerformanceExecution" sourceRef="ServiceTask_ExecutePerformanceTests" targetRef="ParallelGateway_Convergence"/>
    <bpmn:sequenceFlow id="SequenceFlow_FromEdgeCaseExecution" sourceRef="ServiceTask_ExecuteEdgeCaseTests" targetRef="ParallelGateway_Convergence"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToAggregateResults" sourceRef="ParallelGateway_Convergence" targetRef="ServiceTask_AggregateResults"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToValidateResults" sourceRef="ServiceTask_AggregateResults" targetRef="ServiceTask_ValidateResultsIntegrity"/>
    <bpmn:sequenceFlow id="SequenceFlow_ToExecutionEnd" sourceRef="ServiceTask_ValidateResultsIntegrity" targetRef="EndEvent_TestExecutionComplete"/>

  </bpmn:process>

  <!-- Message Definitions -->
  <bpmn:message id="Message_TestingTaskRequest" name="Testing Task Request"/>
  <bpmn:message id="Message_TaskCompletion" name="Testing Task Completion"/>
  <bpmn:message id="Message_NoServicesFound" name="No Services Found"/>

  <!-- Error Definitions -->
  <bpmn:error id="Error_ServiceDiscoveryFailure" name="Service Discovery Failure" errorCode="SERVICE_DISCOVERY_FAILURE"/>
  <bpmn:error id="Error_TestGenerationFailure" name="Test Generation Failure" errorCode="TEST_GENERATION_FAILURE"/>
  <bpmn:error id="Error_TestExecutionFailure" name="Test Execution Failure" errorCode="TEST_EXECUTION_FAILURE"/>
  <bpmn:error id="Error_TemplateLoadingFailure" name="Template Loading Failure" errorCode="TEMPLATE_LOADING_FAILURE"/>

  <!-- Data Item Definitions -->
  <bpmn:itemDefinition id="ItemDefinition_TestingTaskRequest" structureRef="TestingTaskRequest"/>
  <bpmn:itemDefinition id="ItemDefinition_RequestValidation" structureRef="RequestValidation"/>
  <bpmn:itemDefinition id="ItemDefinition_TestContext" structureRef="TestContext"/>
  <bpmn:itemDefinition id="ItemDefinition_DiscoveredServices" structureRef="DiscoveredServices"/>
  <bpmn:itemDefinition id="ItemDefinition_ServiceValidation" structureRef="ServiceValidation"/>
  <bpmn:itemDefinition id="ItemDefinition_PreparedTemplates" structureRef="PreparedTemplates"/>
  <bpmn:itemDefinition id="ItemDefinition_GeneratedTests" structureRef="GeneratedTests"/>
  <bpmn:itemDefinition id="ItemDefinition_TestResults" structureRef="TestResults"/>
  <bpmn:itemDefinition id="ItemDefinition_QualityAnalysis" structureRef="QualityAnalysis"/>
  <bpmn:itemDefinition id="ItemDefinition_QualityReport" structureRef="QualityReport"/>
  <bpmn:itemDefinition id="ItemDefinition_ParsedEndpoints" structureRef="ParsedEndpoints"/>
  <bpmn:itemDefinition id="ItemDefinition_RawServiceData" structureRef="RawServiceData"/>
  <bpmn:itemDefinition id="ItemDefinition_AnalyzedServices" structureRef="AnalyzedServices"/>
  <bpmn:itemDefinition id="ItemDefinition_CategorizedServices" structureRef="CategorizedServices"/>
  <bpmn:itemDefinition id="ItemDefinition_TemplateRepository" structureRef="TemplateRepository"/>
  <bpmn:itemDefinition id="ItemDefinition_ServiceCharacteristics" structureRef="ServiceCharacteristics"/>
  <bpmn:itemDefinition id="ItemDefinition_AccuracyTests" structureRef="AccuracyTests"/>
  <bpmn:itemDefinition id="ItemDefinition_PerformanceTests" structureRef="PerformanceTests"/>
  <bpmn:itemDefinition id="ItemDefinition_EdgeCaseTests" structureRef="EdgeCaseTests"/>
  <bpmn:itemDefinition id="ItemDefinition_TestEnvironment" structureRef="TestEnvironment"/>
  <bpmn:itemDefinition id="ItemDefinition_AccuracyResults" structureRef="AccuracyResults"/>
  <bpmn:itemDefinition id="ItemDefinition_PerformanceResults" structureRef="PerformanceResults"/>
  <bpmn:itemDefinition id="ItemDefinition_CompletionNotification" structureRef="CompletionNotification"/>

</bpmn:definitions>