openapi: 3.1.0
info:
  title: A2A Agent Platform API
  description: |
    # A2A (Agent-to-Agent) Platform REST API
    
    Enterprise-grade API for managing AI agents, workflows, and data processing pipelines.
    Built on SAP Business Technology Platform with OAuth2 security and multi-tenant support.
    
    ## Key Features
    - **Agent Management**: Create, configure, and orchestrate AI agents
    - **Workflow Automation**: Design and execute complex data processing workflows  
    - **Service Marketplace**: Discover and consume agent services
    - **Network Analytics**: Monitor performance and track metrics
    - **Security & Audit**: Enterprise-grade security with comprehensive audit trails
    
    ## Authentication
    All API endpoints require OAuth2 Bearer token authentication via SAP XSUAA.
    Scopes are enforced based on user roles and permissions defined in xs-security.json.
    
    ## Rate Limiting
    - Standard users: 1000 requests/hour
    - Premium users: 10000 requests/hour
    - Enterprise users: Unlimited
    
    ## Support
    - Documentation: https://docs.a2a-platform.com
    - Support: support@a2a-platform.com
    - Status Page: https://status.a2a-platform.com
    
  version: 1.0.0
  contact:
    name: A2A Platform Support
    email: support@a2a-platform.com
    url: https://docs.a2a-platform.com
  license:
    name: Enterprise License
    url: https://a2a-platform.com/license
  termsOfService: https://a2a-platform.com/terms

servers:
  - url: https://api.a2a-platform.com/v1
    description: Production Server
  - url: https://staging-api.a2a-platform.com/v1
    description: Staging Server
  - url: http://localhost:4004/api/v1
    description: Local Development Server

# Security Schemes
security:
  - OAuth2: []

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: SAP XSUAA OAuth2 authentication with role-based access control
      flows:
        authorizationCode:
          authorizationUrl: https://your-tenant.authentication.sap.hana.ondemand.com/oauth/authorize
          tokenUrl: https://your-tenant.authentication.sap.hana.ondemand.com/oauth/token
          scopes:
            a2a-agents.Admin: Full administrative access to all platform functions
            a2a-agents.AgentOperator: Operate agents and manage workflows
            a2a-agents.DataViewer: View data products and reports
            a2a-agents.Agent0.Execute: Execute Agent 0 (Data Product Registration)
            a2a-agents.Agent1.Execute: Execute Agent 1 (Data Standardization)
            a2a-agents.Agent2.Execute: Execute Agent 2 (AI Data Preparation)
            a2a-agents.Agent3.Execute: Execute Agent 3 (Vector Processing)
            a2a-agents.Agent4.Execute: Execute Agent 4 (Calculation & Validation)
            a2a-agents.Agent5.Execute: Execute Agent 5 (Quality Assurance)

  # Reusable Schemas
  schemas:
    Agent:
      type: object
      description: AI Agent entity with capabilities and configuration
      required:
        - id
        - name
        - type
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the agent
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          description: Human-readable agent name
          example: "Data Standardization Agent"
          maxLength: 100
        type:
          type: string
          enum: [data_product, standardization, ai_preparation, vector_processing, calculation, quality_assurance]
          description: Agent type determining its capabilities and role
        status:
          type: string
          enum: [active, inactive, maintenance, error]
          description: Current operational status of the agent
        version:
          type: string
          description: Agent version following semantic versioning
          example: "1.2.3"
        description:
          type: string
          description: Detailed description of agent functionality
          maxLength: 500
        capabilities:
          type: array
          description: List of agent capabilities and supported operations
          items:
            $ref: '#/components/schemas/Capability'
        configuration:
          type: object
          description: Agent-specific configuration parameters
          additionalProperties: true
        performance:
          $ref: '#/components/schemas/PerformanceMetrics'
        createdAt:
          type: string
          format: date-time
          description: Agent creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last modification timestamp
        createdBy:
          type: string
          description: User ID who created the agent

    Capability:
      type: object
      description: Agent capability definition
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          description: Unique capability identifier
        name:
          type: string
          description: Human-readable capability name
        type:
          type: string
          enum: [data_processing, ai_inference, validation, transformation]
        parameters:
          type: object
          description: Capability-specific parameters
          additionalProperties: true
        enabled:
          type: boolean
          description: Whether capability is currently enabled
          default: true

    PerformanceMetrics:
      type: object
      description: Agent performance and health metrics
      properties:
        executionCount:
          type: integer
          description: Total number of executions
          minimum: 0
        successRate:
          type: number
          format: float
          description: Success rate percentage (0-100)
          minimum: 0
          maximum: 100
        averageExecutionTime:
          type: number
          format: float
          description: Average execution time in milliseconds
          minimum: 0
        lastExecutionTime:
          type: string
          format: date-time
          description: Timestamp of last execution
        errorCount:
          type: integer
          description: Total number of errors
          minimum: 0
        healthScore:
          type: number
          format: float
          description: Overall health score (0-100)
          minimum: 0
          maximum: 100

    Workflow:
      type: object
      description: Automated workflow definition
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique workflow identifier
        name:
          type: string
          description: Workflow name
          maxLength: 100
        description:
          type: string
          description: Workflow description
          maxLength: 500
        status:
          type: string
          enum: [draft, active, paused, completed, failed]
          description: Current workflow status
        steps:
          type: array
          description: Ordered list of workflow steps
          items:
            $ref: '#/components/schemas/WorkflowStep'
        schedule:
          $ref: '#/components/schemas/Schedule'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    WorkflowStep:
      type: object
      description: Individual step in a workflow
      required:
        - id
        - agentId
        - order
      properties:
        id:
          type: string
          description: Step identifier
        agentId:
          type: string
          format: uuid
          description: Agent responsible for this step
        order:
          type: integer
          description: Step execution order
          minimum: 1
        parameters:
          type: object
          description: Step-specific parameters
          additionalProperties: true
        conditions:
          type: object
          description: Execution conditions and dependencies
          additionalProperties: true

    Schedule:
      type: object
      description: Workflow execution schedule
      properties:
        type:
          type: string
          enum: [once, recurring, cron]
          description: Schedule type
        cronExpression:
          type: string
          description: Cron expression for recurring schedules
          example: "0 0 12 * * ?"
        startTime:
          type: string
          format: date-time
          description: Schedule start time
        endTime:
          type: string
          format: date-time
          description: Schedule end time (optional)
        timezone:
          type: string
          description: Timezone for schedule execution
          example: "UTC"

    Service:
      type: object
      description: Available service in the marketplace
      required:
        - id
        - name
        - category
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique service identifier
        name:
          type: string
          description: Service name
        category:
          type: string
          enum: [data_processing, ai_ml, integration, analytics, security]
          description: Service category
        status:
          type: string
          enum: [available, deprecated, maintenance]
          description: Service availability status
        version:
          type: string
          description: Service version
        description:
          type: string
          description: Service description
        provider:
          type: string
          description: Service provider
        pricing:
          $ref: '#/components/schemas/Pricing'
        endpoints:
          type: array
          description: Service API endpoints
          items:
            $ref: '#/components/schemas/Endpoint'

    Pricing:
      type: object
      description: Service pricing information
      properties:
        model:
          type: string
          enum: [free, pay_per_use, subscription, enterprise]
          description: Pricing model
        currency:
          type: string
          description: Currency code (ISO 4217)
          example: "USD"
        basePrice:
          type: number
          format: float
          description: Base price amount
        unit:
          type: string
          description: Pricing unit (per request, per month, etc.)

    Endpoint:
      type: object
      description: Service API endpoint
      properties:
        path:
          type: string
          description: Endpoint path
        method:
          type: string
          enum: [GET, POST, PUT, DELETE, PATCH]
          description: HTTP method
        description:
          type: string
          description: Endpoint description
        parameters:
          type: array
          description: Endpoint parameters
          items:
            type: object

    NetworkStats:
      type: object
      description: Network-wide statistics and metrics
      properties:
        totalAgents:
          type: integer
          description: Total number of registered agents
          minimum: 0
        activeAgents:
          type: integer
          description: Number of currently active agents
          minimum: 0
        totalServices:
          type: integer
          description: Total number of available services
          minimum: 0
        totalWorkflows:
          type: integer
          description: Total number of workflows
          minimum: 0
        activeWorkflows:
          type: integer
          description: Number of currently active workflows
          minimum: 0
        totalExecutions:
          type: integer
          description: Total number of executions across all agents
          minimum: 0
        successRate:
          type: number
          format: float
          description: Overall network success rate percentage
          minimum: 0
          maximum: 100

    Error:
      type: object
      description: Standard error response
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        requestId:
          type: string
          description: Unique request identifier for tracking

  # Reusable Parameters
  parameters:
    AgentId:
      name: agentId
      in: path
      required: true
      description: Unique agent identifier
      schema:
        type: string
        format: uuid

    WorkflowId:
      name: workflowId
      in: path
      required: true
      description: Unique workflow identifier
      schema:
        type: string
        format: uuid

    ServiceId:
      name: serviceId
      in: path
      required: true
      description: Unique service identifier
      schema:
        type: string
        format: uuid

    Limit:
      name: limit
      in: query
      description: Maximum number of items to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    Offset:
      name: offset
      in: query
      description: Number of items to skip
      schema:
        type: integer
        minimum: 0
        default: 0

    Status:
      name: status
      in: query
      description: Filter by status
      schema:
        type: string

  # Reusable Responses
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "NOT_FOUND"
            message: "The requested resource was not found"
            timestamp: "2024-01-15T10:30:00Z"
            requestId: "req_123456789"

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "UNAUTHORIZED"
            message: "Valid authentication token required"
            timestamp: "2024-01-15T10:30:00Z"
            requestId: "req_123456789"

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "FORBIDDEN"
            message: "Insufficient permissions to access this resource"
            timestamp: "2024-01-15T10:30:00Z"
            requestId: "req_123456789"

    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "VALIDATION_ERROR"
            message: "Request validation failed"
            details:
              field: "name"
              issue: "Field is required"
            timestamp: "2024-01-15T10:30:00Z"
            requestId: "req_123456789"

# API Paths
paths:
  # Agent Management Endpoints
  /agents:
    get:
      tags:
        - Agent Management
      summary: List all agents
      description: |
        Retrieve a paginated list of all agents in the platform.
        Supports filtering by status, type, and other criteria.
      operationId: listAgents
      security:
        - OAuth2: [a2a-agents.DataViewer]
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: status
          in: query
          description: Filter agents by status
          schema:
            type: string
            enum: [active, inactive, maintenance, error]
        - name: type
          in: query
          description: Filter agents by type
          schema:
            type: string
            enum: [data_product, standardization, ai_preparation, vector_processing, calculation, quality_assurance]
      responses:
        '200':
          description: List of agents retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agent'
                  total:
                    type: integer
                    description: Total number of agents
                  limit:
                    type: integer
                    description: Items per page
                  offset:
                    type: integer
                    description: Items skipped
              example:
                agents:
                  - id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Data Standardization Agent"
                    type: "standardization"
                    status: "active"
                    version: "1.2.3"
                total: 25
                limit: 20
                offset: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      tags:
        - Agent Management
      summary: Create a new agent
      description: |
        Create a new AI agent with specified capabilities and configuration.
        Requires AgentOperator or Admin permissions.
      operationId: createAgent
      security:
        - OAuth2: [a2a-agents.AgentOperator]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                name:
                  type: string
                  description: Agent name
                  maxLength: 100
                type:
                  type: string
                  enum: [data_product, standardization, ai_preparation, vector_processing, calculation, quality_assurance]
                description:
                  type: string
                  maxLength: 500
                capabilities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Capability'
                configuration:
                  type: object
                  additionalProperties: true
            example:
              name: "Custom Data Processing Agent"
              type: "data_product"
              description: "Specialized agent for custom data processing workflows"
              capabilities:
                - id: "data_validation"
                  name: "Data Validation"
                  type: "validation"
                  enabled: true
      responses:
        '201':
          description: Agent created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /agents/{agentId}:
    get:
      tags:
        - Agent Management
      summary: Get agent details
      description: Retrieve detailed information about a specific agent
      operationId: getAgent
      security:
        - OAuth2: [a2a-agents.DataViewer]
      parameters:
        - $ref: '#/components/parameters/AgentId'
      responses:
        '200':
          description: Agent details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Agent Management
      summary: Update agent
      description: Update agent configuration and capabilities
      operationId: updateAgent
      security:
        - OAuth2: [a2a-agents.AgentOperator]
      parameters:
        - $ref: '#/components/parameters/AgentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                status:
                  type: string
                  enum: [active, inactive, maintenance]
                capabilities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Capability'
                configuration:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: Agent updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Agent Management
      summary: Delete agent
      description: |
        Delete an agent from the platform.
        This action is irreversible and requires Admin permissions.
      operationId: deleteAgent
      security:
        - OAuth2: [a2a-agents.Admin]
      parameters:
        - $ref: '#/components/parameters/AgentId'
      responses:
        '204':
          description: Agent deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /agents/{agentId}/execute:
    post:
      tags:
        - Agent Management
      summary: Execute agent
      description: |
        Execute an agent with specified parameters.
        Requires appropriate agent execution permissions.
      operationId: executeAgent
      security:
        - OAuth2: [a2a-agents.Agent0.Execute, a2a-agents.Agent1.Execute, a2a-agents.Agent2.Execute, a2a-agents.Agent3.Execute, a2a-agents.Agent4.Execute, a2a-agents.Agent5.Execute]
      parameters:
        - $ref: '#/components/parameters/AgentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: object
                  description: Execution parameters
                  additionalProperties: true
                async:
                  type: boolean
                  description: Whether to execute asynchronously
                  default: false
                timeout:
                  type: integer
                  description: Execution timeout in seconds
                  minimum: 1
                  maximum: 3600
                  default: 300
            example:
              parameters:
                inputData: "sample data"
                processingMode: "standard"
              async: false
              timeout: 600
      responses:
        '200':
          description: Agent executed successfully (synchronous)
          content:
            application/json:
              schema:
                type: object
                properties:
                  executionId:
                    type: string
                    description: Unique execution identifier
                  status:
                    type: string
                    enum: [completed, failed]
                  result:
                    type: object
                    description: Execution result
                    additionalProperties: true
                  executionTime:
                    type: number
                    description: Execution time in milliseconds
                  timestamp:
                    type: string
                    format: date-time
        '202':
          description: Agent execution started (asynchronous)
          content:
            application/json:
              schema:
                type: object
                properties:
                  executionId:
                    type: string
                    description: Unique execution identifier
                  status:
                    type: string
                    enum: [running]
                  statusUrl:
                    type: string
                    description: URL to check execution status
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Workflow Management Endpoints
  /workflows:
    get:
      tags:
        - Workflow Management
      summary: List workflows
      description: Retrieve a paginated list of workflows
      operationId: listWorkflows
      security:
        - OAuth2: [a2a-agents.DataViewer]
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: status
          in: query
          description: Filter workflows by status
          schema:
            type: string
            enum: [draft, active, paused, completed, failed]
      responses:
        '200':
          description: List of workflows retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workflows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workflow'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      tags:
        - Workflow Management
      summary: Create workflow
      description: Create a new workflow with defined steps and schedule
      operationId: createWorkflow
      security:
        - OAuth2: [a2a-agents.AgentOperator]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - steps
              properties:
                name:
                  type: string
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                steps:
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkflowStep'
                schedule:
                  $ref: '#/components/schemas/Schedule'
      responses:
        '201':
          description: Workflow created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  # Service Marketplace Endpoints
  /services:
    get:
      tags:
        - Service Marketplace
      summary: List available services
      description: Browse available services in the marketplace
      operationId: listServices
      security:
        - OAuth2: [a2a-agents.DataViewer]
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: category
          in: query
          description: Filter services by category
          schema:
            type: string
            enum: [data_processing, ai_ml, integration, analytics, security]
        - name: status
          in: query
          description: Filter services by status
          schema:
            type: string
            enum: [available, deprecated, maintenance]
      responses:
        '200':
          description: List of services retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  # Network Analytics Endpoints
  /analytics/network-stats:
    get:
      tags:
        - Network Analytics
      summary: Get network statistics
      description: Retrieve network-wide statistics and performance metrics
      operationId: getNetworkStats
      security:
        - OAuth2: [a2a-agents.DataViewer]
      responses:
        '200':
          description: Network statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkStats'
              example:
                totalAgents: 25
                activeAgents: 23
                totalServices: 15
                totalWorkflows: 8
                activeWorkflows: 5
                totalExecutions: 1250
                successRate: 98.5
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /analytics/agents/{agentId}/metrics:
    get:
      tags:
        - Network Analytics
      summary: Get agent performance metrics
      description: Retrieve detailed performance metrics for a specific agent
      operationId: getAgentMetrics
      security:
        - OAuth2: [a2a-agents.DataViewer]
      parameters:
        - $ref: '#/components/parameters/AgentId'
        - name: timeRange
          in: query
          description: Time range for metrics
          schema:
            type: string
            enum: [1h, 24h, 7d, 30d]
            default: 24h
      responses:
        '200':
          description: Agent metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetrics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

# Tags for API organization
tags:
  - name: Agent Management
    description: Operations for managing AI agents
  - name: Workflow Management
    description: Operations for managing automated workflows
  - name: Service Marketplace
    description: Operations for browsing and consuming services
  - name: Network Analytics
    description: Operations for monitoring and analytics

# External Documentation
externalDocs:
  description: A2A Platform Documentation
  url: https://docs.a2a-platform.com
